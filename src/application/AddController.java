package application;


import javafx.fxml.FXML;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.ScrollPane;
import javafx.scene.control.TextField;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.Pane;
import javafx.scene.paint.Color;
import javafx.scene.text.Text;
import javafx.stage.Stage;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;

import javafx.event.ActionEvent;

public class AddController {

	private Stage stage;
	public int j;

	public void init(PaneController controller, Stage stage){
		this.stage = stage;
	}

	public void init2(MenuController controller, Stage stage){
		this.stage = stage;
	}


	@FXML
	private TextField setName;
	@FXML
	private TextField setClass;
	@FXML
	private TextField setNumber;
	@FXML
	private TextField setGrade;
	@FXML
	private Label wr1Lab;

	static int i = 0;

	@FXML
	private void onDelete()throws FileNotFoundException {

		// TODO Autogenerated

		
		File csv = new File("Students.csv");
        ArrayList<Student> list = new ArrayList();
        Output.readCSV("Students.csv", list);
        i=list.size();

        String Number = setNumber.getText();

        Student[] stu = new Student[i];
        int j;
        
            for(j =0; j < i;j++){
                stu[j] = list.get(j);
                if(Number.compareTo(stu[j].GetNumber()) == 0){
                    Text text1 = new Text(100, 50, "name:\t" + stu[j].GetName());
                    Text text2 = new Text(100, 80, "class:\t" + stu[j].GetClass());
                    Text text3 = new Text(100, 120, "Number:\t" + stu[j].GetNumber());
                    Text text4 = new Text(100, 150, "score:\t" + stu[j].GetScore());
                    Text text5 = new Text(100, 180, "absent:\t" + stu[j].GetAbsent());


                    Button bt1 = new Button("删除");
                    Button bt2 = new Button("退出");
                    bt1.setLayoutX(100);
                    bt1.setLayoutY(180);
                    bt2.setLayoutX(200);
                    bt2.setLayoutY(180);
                    Pane pane = new Pane();
                    pane.getChildren().addAll(text1, text2, text3, text4,text5, bt1, bt2);
                    Scene scene = new Scene(pane, 350, 280);
                    stage.setScene(scene);

                    bt1.setOnAction(e -> {
                        try {
                            detele();
                        }
                        catch (FileNotFoundException ex) {
                            Logger.getLogger(AddController.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        catch (Exception ex) {
                            Logger.getLogger(AddController.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    });
                    bt2.setOnAction(e -> {
                        try {
                            stage.close();
                        }
                        catch (Exception ex) {
                            Logger.getLogger(AddController.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    });
                    break;
                }
            }

            if(j == i ){
                Text text = new Text(100, 100, "No fond this person!");
                text.setFill(Color.RED);

                Button bt2 = new Button("out");

                bt2.setLayoutX(200);
                bt2.setLayoutY(130);
                Pane pane = new Pane();
                pane.getChildren().addAll(text, bt2);

                Scene scene = new Scene(pane, 350, 250);
                stage.setScene(scene);


                bt2.setOnAction(e -> {
                    try {
                        stage.close();;
                    }
                    catch (Exception ex) {
                        Logger.getLogger(AddController.class.getName()).log(Level.SEVERE, null, ex);
                    }
                });
            }
        }


	

	@FXML
	private void detele() throws FileNotFoundException, Exception {
        
        File csv = new File("Students.csv");
        ArrayList<Student> list = new ArrayList();
        Output.readCSV("Students.csv", list);
        i=list.size();

        String Number = setNumber.getText();

        Student[] stu = new Student[i];
        
            for(int j =0; j < i;j++){
                stu[j] = list.get(j);
                if(Number.compareTo(stu[j].GetNumber()) == 0){//确定删除则用下一组数据，将要删除的数据覆盖
                    i --;
                    j --;
                }
            }
        

        

        if(i == 0){//如果删除后的学生数量为0，则不输入如何学生数据，使文件的内容为空
            try (PrintWriter output = new PrintWriter(csv)) {
            }
        }
        else{
            try (PrintWriter output = new PrintWriter(csv)) {
                for(int j = 0;j < i;j ++){
                	Output.outputCsv(stu[j].GetName(), stu[j].GetClass(), stu[j].GetNumber(), stu[j].GetScore(), stu[j].GetAbsent(), output);
                }
            }
        }
        stage.close();
    }

	// Event Listener on Button.onAction
	@FXML
	private void addStudents(ActionEvent event) throws IOException {

		Student stu = new Student(setName.getText(), setClass.getText(),
                setNumber.getText(), Integer.parseInt(setGrade.getText()),0);//使用自定义的类暂时储存数据

      

       try (FileWriter out = new FileWriter("Students.csv",true)) {
           
           out.write(stu.GetName() + ",");
           out.write(stu.GetClass() + ",");
           out.write(stu.GetNumber() + ",");
           out.write(stu.GetScore() + ",");
           out.write(stu.GetAbsent() + "\r\n");
       }

       i++;
       
       wr1Lab.setText("添加成功");
		// TODO Autogenerated
	}

	@FXML
	private void onAmend()throws FileNotFoundException{
		int i = 0;
		
		File csv = new File("Students.csv");
        ArrayList<Student> list = new ArrayList();
        Output.readCSV("Students.csv", list);
        i=list.size();

        String Number = setNumber.getText();

        GridPane pane = new GridPane();
        ScrollPane sp = new ScrollPane();
        sp.setMaxHeight(500);
        sp.setMinWidth(650);
        sp.setContent(pane);
        pane.setHgap(20);
        pane.setVgap(10);

        pane.add(new Label("次序") , 0, 0);
        pane.add(new Label("姓名"), 1, 0);
        pane.add(new Label("班级"), 2, 0);
        pane.add(new Label("学号"), 3, 0);
        pane.add(new Label("成绩"), 4, 0);
        pane.add(new Label("修改选项"), 5, 0);
        pane.add(new Label("缺勤次数"), 6, 0);
        Student[] stu = new Student[i];
        Text[][] text = new Text[i][5];
        Button[] bt1= new Button[i];
        int j;
        int n=0;
        String[] Num=new String[i];//新建数组储存学号（j会销毁不能在onAbsent（）直接用）
        

            for(j =0; j <i;j++){
                stu[j] = list.get(j);
                if(stu[j].GetNumber().indexOf(Number) != -1){
                text[n][0] = new Text(stu[j].GetName());
                text[n][1] = new Text(stu[j].GetClass());
                text[n][2] = new Text(stu[j].GetNumber());
                text[n][3] = new Text("" + stu[j].GetScore());
                text[n][4] = new Text("" + stu[j].GetAbsent());
                bt1[n]=new Button("修改");
                pane.add(new Label("" + n + 1), 0, n + 1);
                pane.add(text[n][0], 1, n + 1);
                pane.add(text[n][1], 2, n + 1);
                pane.add(text[n][2], 3, n + 1);
                pane.add(text[n][3], 4, n + 1);
                pane.add(bt1[n],5,n + 1);
                pane.add(text[n][4], 6, n + 1);
                int k = j;
                Num[k] = stu[j].GetNumber();
                bt1[n].setOnAction(e -> {
                	try {
                		amend(Num[k]);


        			} catch (Exception e1) {
        				// TODO Auto-generated catch block
        				e1.printStackTrace();
        			}
                });
                n++;
                }
            }
        
        Button bt = new Button("out");
        pane.add(bt, 2, j + 1);



        bt.setOnAction(e -> {

        	stage.close();
        });
        Scene scene = new Scene(sp);
        stage.setScene(scene);
	}

	@FXML
	private void amend(String Number) {//修改学生3
        TextField newName = new TextField();
        TextField newClass = new TextField();
        TextField newNumber = new TextField();
        TextField newGrade = new TextField();
        TextField newAbsent = new TextField();

        Button bt = new Button("OK");
        GridPane pane = new GridPane();
        ScrollPane sp = new ScrollPane();
        sp.setMaxHeight(500);
        sp.setMinWidth(650);
        sp.setContent(pane);
        pane.setHgap(20);
        pane.setVgap(10);

        pane.add(new Label("new 姓名："), 0, 1);
        pane.add(newName, 1, 1);
        pane.add(new Label("new 班级："), 0, 2);
        pane.add(newClass, 1, 2);
        pane.add(new Label("new 学号："), 0, 3);
        pane.add(newNumber, 1, 3);
        pane.add(new Label("new 成绩："), 0, 4);
        pane.add(newGrade, 1, 4);
        pane.add(new Label("new 缺席："), 0, 5);
        pane.add(newAbsent, 1, 5);
        pane.add(bt, 1, 6);

        Scene scene = new Scene(sp);
        stage.setScene(scene);

        bt.setOnAction(e -> {
            try {
                Amend(newName, newClass,
                        newNumber, newGrade,newAbsent,Number);
            }
            catch (FileNotFoundException ex) {
            	 Logger.getLogger(AddController.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
            	 Logger.getLogger(AddController.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }


	private void Amend(TextField newName, TextField newClass, TextField newNumber,
            TextField newGrade,TextField newAbsent, String Number) throws FileNotFoundException, Exception {//修改学生4
        
        File csv = new File("Students.csv");
        ArrayList<Student> list = new ArrayList();
        Output.readCSV("Students.csv", list);
        i=list.size();



        Student[] stu = new Student[i];
        
            for(int j =0; j < i;j++){
                stu[j] = list.get(j);
                if(Number.compareTo(stu[j].GetNumber()) == 0){
                    stu[j] = new Student(newName.getText(), newClass.getText(),
                 newNumber.getText(), Integer.parseInt(newGrade.getText()),Integer.parseInt(newAbsent.getText()));
                }
            }
        

        

        if(i == 0){
            try (PrintWriter output = new PrintWriter(csv)) {
            }
        }
        else{
            try (PrintWriter output = new PrintWriter(csv)) {
                for(int j = 0;j < i;j ++){
                	Output.outputCsv(stu[j].GetName(), stu[j].GetClass(), stu[j].GetNumber(), stu[j].GetScore(), stu[j].GetAbsent(), output);
                }
            }
        }
        stage.close();
    }

	@FXML
	private void onCheck1()throws FileNotFoundException{//已弃用，只能显示一个学生
		
		File csv = new File("Students.csv");
        ArrayList<Student> list = new ArrayList();
        Output.readCSV("Students.csv", list);
        
        i=list.size();

        String Number = setNumber.getText();

        Student[] stu = new Student[i];
        int j;
        
            for(j =0; j < i;j++){
                stu[j] = list.get(j);
                if(stu[j].GetNumber().indexOf(Number) != -1){

                    Text text1 = new Text(100, 50, "姓名:\t" + stu[j].GetName());
                    Text text2 = new Text(100, 80, "班级:\t" + stu[j].GetClass());
                    Text text3 = new Text(100, 120, "学号:\t" + stu[j].GetNumber());
                    Text text4 = new Text(100, 150, "成绩:\t" + stu[j].GetScore());
                    Text text5 = new Text(100, 180, "缺席:\t" + stu[j].GetAbsent());

                    Button bt1 = new Button("修改");
                    Button bt2 = new Button("退出");
                    bt1.setLayoutX(100);
                    bt1.setLayoutY(180);
                    bt2.setLayoutX(200);
                    bt2.setLayoutY(180);
                    Pane pane = new Pane();
                    pane.getChildren().addAll(text1, text2, text3, text4,text5, bt1, bt2);
                    Scene scene = new Scene(pane, 350, 280);
                    stage.setScene(scene);

                    bt1.setOnAction(e -> amend(Number));
                    bt2.setOnAction(e -> {
                        try {
                            stage.close();
                        }
                        catch (Exception ex) {
                        	 Logger.getLogger(AddController.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    });
                    break;
                }
            }

            if(j == i ){
                Text text = new Text(100, 100, "No fond this person!");
                text.setFill(Color.RED);

                Button bt2 = new Button("out");

                bt2.setLayoutX(200);
                bt2.setLayoutY(130);
                Pane pane = new Pane();
                pane.getChildren().addAll(text,  bt2);

                Scene scene = new Scene(pane, 350, 250);
                stage.setScene(scene);


                bt2.setOnAction(e -> {
                    try {
                        stage.close();
                    }
                    catch (Exception ex) {
                    	 Logger.getLogger(AddController.class.getName()).log(Level.SEVERE, null, ex);
                    	 }
                });
            }
        
	}

	@FXML

	private void onCheck() throws FileNotFoundException {//显示所有含所输入学号的所有学生数据
        int i = 0;
		
		File csv = new File("Students.csv");
        ArrayList<Student> list = new ArrayList();
        Output.readCSV("Students.csv", list);
        i=list.size();

        String Number = setNumber.getText();

        GridPane pane = new GridPane();
        ScrollPane sp = new ScrollPane();
        sp.setMaxHeight(500);
        sp.setMinWidth(650);
        sp.setContent(pane);
        pane.setHgap(20);
        pane.setVgap(10);

        pane.add(new Label("次序") , 0, 0);
        pane.add(new Label("姓名"), 1, 0);
        pane.add(new Label("班级"), 2, 0);
        pane.add(new Label("学号"), 3, 0);
        pane.add(new Label("成绩"), 4, 0);
        pane.add(new Label("修改选项"), 5, 0);
        pane.add(new Label("缺勤次数"), 6, 0);
        Student[] stu = new Student[i];
        Text[][] text = new Text[i][5];
        Button[] bt1= new Button[i];
        int j;
        int n=0;
        String[] Num=new String[i];//新建数组储存学号（j会销毁不能在onAbsent（）直接用）
        

            for(j =0; j <i;j++){
                stu[j] = list.get(j);
                if(stu[j].GetNumber().indexOf(Number) != -1){
                text[n][0] = new Text(stu[j].GetName());
                text[n][1] = new Text(stu[j].GetClass());
                text[n][2] = new Text(stu[j].GetNumber());
                text[n][3] = new Text("" + stu[j].GetScore());
                text[n][4] = new Text("" + stu[j].GetAbsent());
                bt1[n]=new Button("修改");
                pane.add(new Label("" + n + 1), 0, n + 1);
                pane.add(text[n][0], 1, n + 1);
                pane.add(text[n][1], 2, n + 1);
                pane.add(text[n][2], 3, n + 1);
                pane.add(text[n][3], 4, n + 1);
                pane.add(bt1[n],5,n + 1);
                pane.add(text[n][4], 6, n + 1);
                int k = j;
                Num[k] = stu[j].GetNumber();
                bt1[n].setOnAction(e -> {
                	try {
                		amend(Num[k]);


        			} catch (Exception e1) {
        				// TODO Auto-generated catch block
        				e1.printStackTrace();
        			}
                });
                n++;
                }
            }
        
        Button bt = new Button("out");
        pane.add(bt, 2, j + 1);



        bt.setOnAction(e -> {

        	stage.close();
        });
        Scene scene = new Scene(sp);
        stage.setScene(scene);
    }



}
